@model X.PagedList.IPagedList<QuanLyCotWeb.Models.ViTri>
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common



@{
    ViewData["Title"] = "Danh sách Vị Trí";

    string? LauSearch = Context.Request.Query["lau"];
    string? LoSoSearch = Context.Request.Query["loSo"];

    int highlightId = 0;
    if (Context.Request.Query["highlight"].Count > 0)
    {
        int.TryParse(Context.Request.Query["highlight"], out highlightId);
    }
}

<h2 class="text-center mb-4">Danh sách Vị Trí</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">
        @TempData["SuccessMessage"]
    </div>
}

<form asp-action="Index" method="get" class="row row-cols-lg-auto g-2 align-items-center mb-3">
    <div class="col">
        <input type="text" name="lau"
               value="@Context.Request.Query["lau"]"
               class="form-control"
               placeholder="Lầu" />
    </div>

    <div class="col">
        <input type="text" name="loSo"
               value="@Context.Request.Query["loSo"]"
               class="form-control"
               placeholder="Lô số" />
    </div>

    <div class="col">
        <select name="tinhTrang" class="form-select">
            <option value="">-- Tình trạng --</option>
            <option value="1" selected="@((string)Context.Request.Query["tinhTrang"] == "1")">Đã Có Cốt</option>
            <option value="2" selected="@((string)Context.Request.Query["tinhTrang"] == "2")">Đặc Chỗ</option>
            <option value="3" selected="@((string)Context.Request.Query["tinhTrang"] == "3")">Trống</option>
        </select>
    </div>

    <div class="col">
        <button type="submit" class="btn btn-primary">Tìm kiếm</button>
    </div>
</form>



<div class="table-responsive">
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark text-center">
            <tr>
                <th>ID Vị Trí</th>
                <th>Lầu</th>
                <th>Lô số</th>
                <th>Tình Trạng</th>
                <th>ID Cốt</th>
                <th>Tên Cốt</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count > 0)
            {
                foreach (var item in Model)
                {
                    <tr class="text-center align-middle @(item.IdviTri == highlightId ? "table-warning" : "")" id="vitri-@item.IdviTri">
                        <td>@item.IdviTri</td>
                        <td>@item.Lau</td>
                        <td>@item.LoSo</td>
                        <td>@item.TinhTrangNavigation?.TenTinhTrang</td>
                        <td>@item.Cot?.Idcot</td>
                        <td>@item.Cot?.Ho @item.Cot?.Ten</td>
                        <td>
                            <a asp-controller="Cots" asp-action="CreateFromViTri" asp-route-idViTri="@item.IdviTri" class="btn btn-sm btn-warning">Cập Nhật</a>
                            <a asp-action="Delete" asp-route-id="@item.IdviTri" class="btn btn-sm btn-danger mb-1">Xóa</a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">Không có dữ liệu.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="text-end me-3 mb-2 text-muted">
    Tổng cộng: @Model.TotalItemCount vị trí
</div>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new
        {
            page,
            lau = LauSearch,
            loSo = LoSoSearch
        }), new PagedListRenderOptions
{
    MaximumPageNumbersToDisplay = 5,
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    UlElementClasses = new[] { "pagination justify-content-center" }
})
</div>

@section Scripts {
    <script>
        const target = document.getElementById("vitri-@highlightId");
        if (target) {
            setTimeout(() => {
                target.scrollIntoView({ behavior: "smooth", block: "center" });
            }, 300);
        }
    </script>
}
